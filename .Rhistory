# !!! Click on plot1.R to directly set the work directory which will run the code without error
# Checking whether the file we're suppose to download exists in the work directory. Otherwise
# it'll be downloaded
if(!file.exists("exdata%2Fdata%2Fhousehold_power_consumption.zip")){
filelink <- "http://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(filelink, destfile = paste(getwd(),"exdata%2Fdata%2Fhousehold_power_consumption.zip", sep = "/"))
unzipped <- unzip("exdata%2Fdata%2Fhousehold_power_consumption.zip")
} else {
unzipped <- unzip("exdata%2Fdata%2Fhousehold_power_consumption.zip")
}
## Loading data
Data <- read.table(unzipped, header = TRUE, sep = ";")
## Rough estimate of how much memory the dataset will require in memory
Memory <- nrow(Data) * ncol(Data) * 8/2^20
cat("Estimated memory for this data set is :", Memory, " MB\n")
## Convertion of the Date column to Date class
Data$Date <- as.Date(Data$Date, "%d/%m/%Y")
## Indexes of rows corresponding to dates to take into account
ids.Date <- which(Data$Date == "2007-02-01" | Data$Date=="2007-02-02")
## Extraction of the Global_active_power and conversion into numeric class
## because str has showed it to be a factor variable
Data2 <- Data[ids.Date, ]
GAP <- as.numeric(Data2$Global_active_power)
## Hisogram of GAP as seen on Peer-graded Assignment: Course Project 1
hist(GAP, main = paste("Global Active Power"), xlab="Global Active Power (kilowatts)", col="red")
## Saving the PNG file as required
dev.copy(png, file="plot1.png", width=480, height=480)
dev.off()
# Saving our Data2 for further use
write.table(Data2, "Data2.txt", row.names = FALSE)
# !!! Click on plot1.R to directly set the work directory which will run the code without error
# Checking whether the file we're suppose to download exists in the work directory. Otherwise
# it'll be downloaded
if(!file.exists("exdata%2Fdata%2Fhousehold_power_consumption.zip")){
filelink <- "http://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(filelink, destfile = paste(getwd(),"exdata%2Fdata%2Fhousehold_power_consumption.zip", sep = "/"))
unzipped <- unzip("exdata%2Fdata%2Fhousehold_power_consumption.zip")
} else {
unzipped <- unzip("exdata%2Fdata%2Fhousehold_power_consumption.zip")
}
## Loading data
Data <- read.table(unzipped, header = TRUE, sep = ";")
## Rough estimate of how much memory the dataset will require in memory
Memory <- nrow(Data) * ncol(Data) * 8/2^20
cat("Estimated memory for this data set is :", Memory, " MB\n")
## Convertion of the Date column to Date class
Data$Date <- as.Date(Data$Date, "%d/%m/%Y")
## Indexes of rows corresponding to dates to take into account
ids.Date <- which(Data$Date == "2007-02-01" | Data$Date=="2007-02-02")
## Extraction of the Global_active_power and conversion into numeric class
## because str has showed it to be a factor variable
Data2 <- Data[ids.Date, ]
GAP <- as.numeric(Data2$Global_active_power)
## Hisogram of GAP as seen on Peer-graded Assignment: Course Project 1
hist(GAP, main = paste("Global Active Power"), xlab="Global Active Power (kilowatts)", col="red")
## Saving the PNG file as required
dev.copy(png, file="plot1.png", width=480, height=480)
dev.off()
# Saving our Data2 for further use
write.table(Data2, "Data2.txt", row.names = FALSE)
# !!! Click on plot1.R to directly set the work directory which will run the code without error
# Checking whether the file we're suppose to download exists in the work directory. Otherwise
# it'll be downloaded
if(!file.exists("exdata%2Fdata%2Fhousehold_power_consumption.zip")){
filelink <- "http://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(filelink, destfile = paste(getwd(),"exdata%2Fdata%2Fhousehold_power_consumption.zip", sep = "/"))
unzipped <- unzip("exdata%2Fdata%2Fhousehold_power_consumption.zip")
} else {
unzipped <- unzip("exdata%2Fdata%2Fhousehold_power_consumption.zip")
}
## Loading data
Data <- read.table(unzipped, header = TRUE, sep = ";")
## Rough estimate of how much memory the dataset will require in memory
Memory <- nrow(Data) * ncol(Data) * 8/2^20
cat("Estimated memory for this data set is :", Memory, " MB\n")
## Convertion of the Date column to Date class
Data$Date <- as.Date(Data$Date, "%d/%m/%Y")
## Indexes of rows corresponding to dates to take into account
ids.Date <- which(Data$Date == "2007-02-01" | Data$Date=="2007-02-02")
## Extraction of the Global_active_power and conversion into numeric class
## because str has showed it to be a factor variable
Data2 <- Data[ids.Date, ]
GAP <- as.numeric(Data2$Global_active_power)
## Hisogram of GAP as seen on Peer-graded Assignment: Course Project 1
hist(GAP, main = paste("Global Active Power"), xlab="Global Active Power (kilowatts)", col="red")
## Saving the PNG file as required
dev.copy(png, file="plot1.png", width=480, height=480)
dev.off()
# Saving our Data2 for further use
write.table(Data2, "Data2.txt", row.names = FALSE)
# !!! Click on plot1.R to directly set the work directory which will run the code without error
# Checking whether the file we're suppose to download exists in the work directory. Otherwise
# it'll be downloaded
if(!file.exists("exdata%2Fdata%2Fhousehold_power_consumption.zip")){
filelink <- "http://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(filelink, destfile = paste(getwd(),"exdata%2Fdata%2Fhousehold_power_consumption.zip", sep = "/"))
unzipped <- unzip("exdata%2Fdata%2Fhousehold_power_consumption.zip")
} else {
unzipped <- unzip("exdata%2Fdata%2Fhousehold_power_consumption.zip")
}
## Loading data
Data <- read.table(unzipped, header = TRUE, sep = ";")
## Rough estimate of how much memory the dataset will require in memory
Memory <- nrow(Data) * ncol(Data) * 8/2^20
cat("Estimated memory for this data set is :", Memory, " MB\n")
## Convertion of the Date column to Date class
Data$Date <- as.Date(Data$Date, "%d/%m/%Y")
## Indexes of rows corresponding to dates to take into account
ids.Date <- which(Data$Date == "2007-02-01" | Data$Date=="2007-02-02")
## Extraction of the Global_active_power and conversion into numeric class
## because str has showed it to be a factor variable
Data2 <- Data[ids.Date, ]
GAP <- as.numeric(Data2$Global_active_power)
## Hisogram of GAP as seen on Peer-graded Assignment: Course Project 1
hist(GAP, main = paste("Global Active Power"), xlab="Global Active Power (kilowatts)", col="red")
## Saving the PNG file as required
dev.copy(png, file="plot1.png", width=480, height=480)
dev.off()
# Saving our Data2 for further use
write.table(Data2, "Data2.txt", row.names = FALSE)
# !!! Click on plot1.R to directly set the work directory which will run the code without error
# Checking whether the file we're suppose to download exists in the work directory. Otherwise
# it'll be downloaded
if(!file.exists("exdata%2Fdata%2Fhousehold_power_consumption.zip")){
filelink <- "http://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(filelink, destfile = paste(getwd(),"exdata%2Fdata%2Fhousehold_power_consumption.zip", sep = "/"))
unzipped <- unzip("exdata%2Fdata%2Fhousehold_power_consumption.zip")
} else {
unzipped <- unzip("exdata%2Fdata%2Fhousehold_power_consumption.zip")
}
## Loading data
Data <- read.table(unzipped, header = TRUE, sep = ";")
## Rough estimate of how much memory the dataset will require in memory
Memory <- nrow(Data) * ncol(Data) * 8/2^20
cat("Estimated memory for this data set is :", Memory, " MB\n")
## Convertion of the Date column to Date class
Data$Date <- as.Date(Data$Date, "%d/%m/%Y")
## Indexes of rows corresponding to dates to take into account
ids.Date <- which(Data$Date == "2007-02-01" | Data$Date=="2007-02-02")
## Extraction of the Global_active_power and conversion into numeric class
## because str has showed it to be a factor variable
Data2 <- Data[ids.Date, ]
GAP <- as.numeric(Data2$Global_active_power)
## Hisogram of GAP as seen on Peer-graded Assignment: Course Project 1
hist(GAP, main = paste("Global Active Power"), xlab="Global Active Power (kilowatts)", col="red")
## Saving the PNG file as required
dev.copy(png, file="plot1.png", width=480, height=480)
dev.off()
# Saving our Data2 for further use
write.table(Data2, "Data2.txt", row.names = FALSE)
# Loading Data 2 saved through Plot1.R
Data2 <- read.table("Data2.txt", header = T)
Data2$datetime=as.POSIXct(paste(Data2$Date, Data2$Time))
plot(Data2$datetime, Data2$Global_active_power, type="l", xlab="", ylab="Global Active Data2 (kilowatts)")
dev.copy(png, file="plot2.png", width=480, height=480)
dev.off()
# Loading Data 2 saved through Plot1.R
Data2 <- read.table("Data2.txt", header = TRUE)
# Combining date and time
Data2$datetime=as.POSIXct(paste(Data2$Date, Data2$Time))
# Bulding the graphic
plot(Data2$datetime, Data2$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering")
lines(Data2$datetime,Data2$Sub_metering_2,col="red")
lines(Data2$datetime,Data2$Sub_metering_3,col="blue")
# Adding the legend
legend("topright", col=c("black","red","blue"), c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"),lty = c(1,1), cex = 0.5)
# Saving the graphic
dev.copy(png, file="plot3.png", width=480, height=480)
dev.off()
# Loading Data 2 saved through Plot1.R
Data2 <- read.table("Data2.txt", header = TRUE)
par(mfrow = c(2,2))
# Plot 1/4
# Loading Data 2 saved through Plot1.R
Data2$datetime=as.POSIXct(paste(Data2$Date, Data2$Time))
plot(Data2$datetime, Data2$Global_active_power, type="l", xlab="", ylab="Global Active Data2 (kilowatts)")
# Plot 2/4
plot(Data2$datetime, Data2$Voltage, type="l", xlab="datetime", ylab="Voltage")
# Plot 3/4
# Bulding the graphic
plot(Data2$datetime, Data2$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering")
lines(Data2$datetime,Data2$Sub_metering_2,col="red")
lines(Data2$datetime,Data2$Sub_metering_3,col="blue")
# Adding the legend
legend("topright", col=c("black","red","blue"), c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"),lty = c(1,1), cex = 0.5, bty = "n", y.intersp = 0.2)
# plot 4/4
plot(Data2$datetime, Data2$Global_reactive_power, type="l", xlab="datetime", ylab="Global_reactive_power")
# Saving plot4
dev.copy(png, file="plot4.png", width=480, height=480)
dev.off()
